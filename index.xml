<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pusnow</title>
    <link>https://www.pusnow.com/</link>
    <description>Recent content on Pusnow</description>
    <generator>Hugo 0.125.1</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Apr 2024 16:15:34 +0900</lastBuildDate>
    <atom:link href="https://www.pusnow.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Poster: Designing a Memory Disaggregation System for Cloud</title>
      <link>https://www.pusnow.com/publication/dmdsc-sigcommposter23/</link>
      <pubDate>Tue, 12 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/dmdsc-sigcommposter23/</guid>
      <description>Proceedings of the ACM SIGCOMM 2023 Conference Posters and Demos (SIGCOMM &amp;lsquo;23 Posters and Demos)&#xA;© Wonsup Yoon, Jisu Ok, Sue Moon, and Youngjin Kwon 2023. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the ACM SIGCOMM 2023 Conference Posters and Demos (SIGCOMM &amp;lsquo;23 Posters and Demos), https://dl.acm.org/doi/pdf/10.1145/3603269.3610854.&#xA;Download PDF</description>
    </item>
    <item>
      <title>Host Efficient Networking Stack Utilizing NIC DRAM</title>
      <link>https://www.pusnow.com/publication/hens-apnet23/</link>
      <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/hens-apnet23/</guid>
      <description>Proceedings of the 7th Asia-Pacific Workshop on Networking (APNet)&#xA;© Byeongkeon Lee, Donghyeon Lee, Jisu Ok, Wonsup Yoon, and Sue Moon 2023. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the 7th Asia-Pacific Workshop on Networking (APNet), https://dl.acm.org/doi/pdf/10.1145/3600061.3600070.&#xA;Download PDF</description>
    </item>
    <item>
      <title>실행 단위 (Execution Unit) 정리</title>
      <link>https://www.pusnow.com/note/execution-units/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/execution-units/</guid>
      <description>Paralellism과 concurrency를 지원하기 위해 다양한 실행 단위(Execution Unit)가 존재한다. 가장 기초적인 프로세스와 스레드부터 그린 스레드(green thread), 코루틴(coroutine), 파이버(fiber) 등 비교적 일반적 개념과, 고루틴(Goroutine)처럼 특정 언어에만 존재하는 개념도 존재한다. 상당수의 기술 문서, 대화에서 이들 개념이 명확히 구분되지 않고 사용되고, 때로는 잘못 사용되는 경우도 많다.&#xA;이를 명확히 구분하려는 글은 몇 존재하지만, 그다지 만족스럽지 않아서 새로 정리해 본다. 되도록 각 개념을 최초로 소개하는 논문 혹은 문서를 참고하려고 했으며, 그 글에서 기존 방식과의 차이가 기술되어 있으면 이를 중점으로 소개한다.</description>
    </item>
    <item>
      <title>DiLOS: Do Not Trade Compatibility for Performance in Memory Disaggregation</title>
      <link>https://www.pusnow.com/publication/dilos-eurosys23/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/dilos-eurosys23/</guid>
      <description>Proceedings of the Eighteenth European Conference on Computer Systems (EuroSys)&#xA;© Wonsup Yoon, Jisu Ok, Jinyoung Oh, Sue Moon, and Youngjin Kwon 2023. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the Eighteenth European Conference on Computer Systems (EuroSys), https://dl.acm.org/doi/pdf/10.1145/3552326.3567488.&#xA;Download PDF</description>
    </item>
    <item>
      <title>QCNFA765을 이용한 Wi-Fi 6 AP</title>
      <link>https://www.pusnow.com/note/qcnfa765-wifi-6-ap/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/qcnfa765-wifi-6-ap/</guid>
      <description>QCNFA765 최근에 알리익스프레스에서 WCN6855를 사용한 QCNFA765이 $20 내외로 판매되고 있다는 것을 발견했다. WCN6855은 Wi-Fi 6(802.11ax)는 물론, 6GHz를 사용하는 Wi-Fi 6E도 지원하여, 사용하고 있던 QCA6174보다 더 좋은 성능을 기대할 수 있다. 또, 두 개 이상의 주파수 대역을 사용하여 성능을 높이는 DBS(dual band simultaneous)도 사용할 수 있어, 6GHz를 지원하는 장비는 성능을 거의 두 배 가까이 올릴 수도 있을 것으로 판단했다.&#xA;이 글에서는 QCNFA765를 구매하여 Wi-Fi 6 AP로 사용할 때 발생한 시행착오를 소개한다.</description>
    </item>
    <item>
      <title>DIY Wi-Fi 라우터</title>
      <link>https://www.pusnow.com/note/diy-wifi-router/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/diy-wifi-router/</guid>
      <description>DIY Wi-Fi 라우터 제작 이 글에서는 개인적으로 사용하는 Wi-Fi 라우터를 소개한다. 일반적인 라우터와 달리 Intel 기반의 미니 PC에 Debian Linux 기반으로 직접 제작하여 커스터미이징이 쉽고 높은 성능을 제공한다.&#xA;목적 기성 Wi-Fi 라우터는 낮은 가격에 쓸만한 성능, 전력효율을 제공한다. 하지만, 대부분의 기성 라우터는 제조사가 제공하는 펌웨어만을 강제한다. OpenWRT와 같은 커스텀 펌웨어를 사용하더라도 완전히 커스터마이즈하여 사용하기에는 한계가 있다.&#xA;그래서, 직접 Wi-Fi 라우터를 만들기로 결심했다. 또, 새로 만드는 김에 기존에 개인적으로 사용하던 홈서버와 통합하여, 홈서버가 Wi-Fi 라우터 기능을 제공하는 것을 목표로 했다.</description>
    </item>
    <item>
      <title>KENS 리뉴얼 Part 3: 지속이 가능한 에코시스템과 남은 과제</title>
      <link>https://www.pusnow.com/note/kens-renewal-part3/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/kens-renewal-part3/</guid>
      <description>Source code available Part 1 Part 2 지속가능성 언제까지고 내가 KENS 수업 조교를 할 수는 없다. 다음에 다른 조교가 쉽게 조교 활동을 할 수 있도록 개편하여 지속이 가능한 에코시스템을 개발하는 것이 이번 리뉴얼의 마지막 목표였다. 이를 위해서 KENS 과제 자료를 문서화, 조교 활동에 수반하는 반복적인 작업을 자동화, 그리고 지식 베이스 조성을 시도하였다. 모든 것이 완벽하다고 할 수는 없지만, 어느 정도 성과가 있어 이를 공유한다. 마지막으로, 현재까지 개발된 KENS의 한계점과 향후 개선 방향에 대하여 정리해 보았다.</description>
    </item>
    <item>
      <title>KENS 리뉴얼 Part 2: 개발 환경과 빌드 시스템</title>
      <link>https://www.pusnow.com/note/kens-renewal-part2/</link>
      <pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/kens-renewal-part2/</guid>
      <description>Source code available Part 1 KENS 개발 환경 기존 KENS 시스템은 과제를 수행하기 위한 개발 환경을 셋업하는 것이 학생들에게 조금 까다로웠다. KENS 개발 환경의 빌드 시스템은 순수 Makefile 이루어져 있고, 빌드 시 GoogleTest 라이브러리를 설치해 주어야 하므로, C/C++을 처음 혹은 두 번째로 사용하는 학생들은 이 둘에 익숙하지 못하다. 따라서, 학생 중 상당수가 과제를 시작하는 데 어려움을 겪고 관련 질의응답도 많이 있었다.&#xA;이 문제의 질의응답이 어려운 점은 학생들의 개발 환경이 매우 다양하다는 점이다.</description>
    </item>
    <item>
      <title>KENS 리뉴얼 Part 1: 메모리 안전성</title>
      <link>https://www.pusnow.com/note/kens-renewal-part1/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/kens-renewal-part1/</guid>
      <description>Source code available KENS KAIST 전산망 개론 수업에서는 KENS(KAIST Educational Network System)라는 네트워크 교육용 시스템을 활용한다. 학생들은 KENS를 이용하여 기초적인 TCP 스택을 구현하는 과제를 수행하며, 이 과제는 전체 수업 과정 중에 상당한 부분을 차지한다. 하지만, 내가 조교 활동을 준비하고 있을 때(2020년 여름)는 KENS 과제에 여러 문제가 누적되어 있었으며, 이 글과 후속 글에서는 조교 활동 및 준비 기간(2020년 여름 ~ 2022년 여름) 동안, KENS가 개선된 내용을 일부 소개한다.&#xA;메모리 안전성 학생들이 과제를 진행하면 가장 많이 겪는 문제는 메모리 관련 버그이다.</description>
    </item>
    <item>
      <title>CS 분야 우수 학술대회 목록</title>
      <link>https://www.pusnow.com/note/cs-top-conferences/</link>
      <pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/cs-top-conferences/</guid>
      <description>URL: https://wsyo.one/csconf&#xA;과제 실적 정리 등으로 CS 분야 우수 학술대회 목록을 사용해야 할 때가 있다. 한국에서 자주 사용되는 목록으로는 한국정보과학회, BK21플러스, KAIST, 서울대, 포항공대에서 관리하는 목록이 있는데, 관련 목록을 쉽게 확인할 수 있도록 정리하였다.</description>
    </item>
    <item>
      <title>USE 방법론과 RED 방법론</title>
      <link>https://www.pusnow.com/note/use-method-and-red-method/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/use-method-and-red-method/</guid>
      <description>시스템의 성능을 분석하는 기법 중 USE 방법론(the USE method)과 RED 방법론(the RED method) 이 널리 알려져 있다. 본 글에서는 이 두 방법론을 간단하게 소개하고, 차이점과 장단점을 분석해 본다.&#xA;USE 방법론 (The USE Method) 시스템을 개발하고 관리하다 보면, 시스템이 종종 기대치에 못 미치는 성능을 보여주는 성능 이슈에 직면하게 된다. 복잡한 시스템에서는, 왜 혹은 시스템의 어떤 부분이 이러한 성능 이슈를 발생시키는지를 찾기는 조금 어려울 수 있다.&#xA;USE 방법론은 성능 이슈를 빠르게 해결하기 위하여 Brendan Gregg가 고안한 방법이다.</description>
    </item>
    <item>
      <title>DinV (Docker-in-VM)</title>
      <link>https://www.pusnow.com/note/dinv/</link>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/dinv/</guid>
      <description>Source code available 간혹 Docker를 Docker 컨테이너 안에서 실행시켜야 하는 경우가 있다. 특히, CI 서비스(Jenkins Docker, GitHub Docker Container Action, GitLab Docker executor)를 Docker를 통하여 배포할 때, Docker 이미지를 빌드할 수 없는 문제가 생긴다. 이는 Docker 이미지를 빌드하기 위해 필요한 dockerd 데몬이 많은 시스템 권한을 요구하기 때문이다.&#xA;기존 솔루션 지금까지 dockerd를 컨테이너 안에서 실행시키기 위해서는 DooD (Docker-out-of-Docker) 혹은 DinD (Docker-in-Docker) 기법을 사용한다. DooD 기법은 컨테이너 내부에서 호스트 dockerd에 연결하여 사용하는 기법으로, 이를 위해 도커 컨트롤 소켓(/var/run/docker.</description>
    </item>
    <item>
      <title>비트 스캔 연산자의 Undefined Behavior</title>
      <link>https://www.pusnow.com/note/undefined-behaviors-of-bit-scan-operators/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/undefined-behaviors-of-bit-scan-operators/</guid>
      <description>비트 스캔 연산자에는 프로그래머가 주의를 기울이지 않으면 실수 할 수 있는 undefined behavior가 존재한다. 이 문서에서는 이런 undefined behavior와 이에 따른 버그 및 해결 방안을 알아본다.&#xA;비트 스캔 연산자 최신 프로세서에는 비트 스캔 연산자가 존재한다. Intel 프로세서의 경우 bsf (Bit Scan First), bsr (Bit Scan Reverse) 연산자와 BMI1 확장을 지원한다면 lzcnt (Leading Zero Count), tzcnt (Trailing Zero Count) 연산자가 추가로 존재한다. 이 연산자들은 기본적으로 피연산자를 스캔하여 가장 첫 번째 혹은 마지막 비트의 위치를 추출하는 역할을 한다.</description>
    </item>
    <item>
      <title>DiLOS: adding performance to paging-based memory disaggregation</title>
      <link>https://www.pusnow.com/publication/dilos-apsys21/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/dilos-apsys21/</guid>
      <description>Proceedings of the 12th ACM SIGOPS Asia-Pacific Workshop on Systems (APSys)&#xA;© Wonsup Yoon, Jinyoung Oh, Jisu Ok, Sue Moon, and Youngjin Kwon 2021. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the 12th ACM SIGOPS Asia-Pacific Workshop on Systems (APSys), https://dl.acm.org/doi/pdf/10.1145/3476886.3477507.&#xA;Download PDF</description>
    </item>
    <item>
      <title>C Atomic Instruction Mapping</title>
      <link>https://www.pusnow.com/note/c-atomic-instruction-mapping/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/c-atomic-instruction-mapping/</guid>
      <description>Note Only 64 bits data types Compiler: clang 11.0.1 https://godbolt.org/z/drMsxvGd4 Mapping Table Operation x86-64 armv8-a RISC-V rv64gc Load (no atomic) mov rax, qword ptr [rip + y] adrp x8, yldr x0, [x8, :lo12:y] lui a0, %hi(y)ld a0, %lo(y)(a0) Load (implicit) mov rax, qword ptr [rip + x] adrp x8, xadd x8, x8, :lo12:xldar x0, [x8] fence rw, rwlui a0, %hi(x)ld a0, %lo(x)(a0)fence r, rw Load (relaxed) mov rax, qword ptr [rip + x] adrp x8, xldr x0, [x8, :lo12:x] lui a0, %hi(x)ld a0, %lo(x)(a0) Load (consume) mov rax, qword ptr [rip + x] adrp x8, xadd x8, x8, :lo12:xldar x0, [x8] lui a0, %hi(x)ld a0, %lo(x)(a0)fence r, rw Load (acquire) mov rax, qword ptr [rip + x] adrp x8, xadd x8, x8, :lo12:xldar x0, [x8] lui a0, %hi(x)ld a0, %lo(x)(a0)fence r, rw Load (release) Watomic-memory-ordering Watomic-memory-ordering Watomic-memory-ordering Load (acq_rel) Watomic-memory-ordering Watomic-memory-ordering Watomic-memory-ordering Load (seq_cst) mov rax, qword ptr [rip + x] adrp x8, xadd x8, x8, :lo12:xldar x0, [x8] fence rw, rwlui a0, %hi(x)ld a0, %lo(x)(a0)fence r, rw Store (no atomic) mov qword ptr [rip + y], rdi adrp x8, ystr x0, [x8, :lo12:y] lui a1, %hi(y)sd a0, %lo(y)(a1) Store (implicit) xchg qword ptr [rip + x], rdi adrp x8, xadd x8, x8, :lo12:xstlr x0, [x8] fence rw, wlui a1, %hi(x)sd a0, %lo(x)(a1) Store (relaxed) mov qword ptr [rip + x], rdi adrp x8, xstr x0, [x8, :lo12:x] lui a1, %hi(x)sd a0, %lo(x)(a1) Store (consume) Watomic-memory-ordering Watomic-memory-ordering Watomic-memory-ordering Store (acquire) Watomic-memory-ordering Watomic-memory-ordering Watomic-memory-ordering Store (release) mov qword ptr [rip + x], rdi adrp x8, xadd x8, x8, :lo12:xstlr x0, [x8] fence rw, wlui a1, %hi(x)sd a0, %lo(x)(a1) Store (acq_rel) Watomic-memory-ordering Watomic-memory-ordering Watomic-memory-ordering Store (seq_cst) xchg qword ptr [rip + x], rdi adrp x8, xadd x8, x8, :lo12:xstlr x0, [x8] fence rw, wlui a1, %hi(x)sd a0, %lo(x)(a1) Exchange (implicit) mov eax, 42xchg qword ptr [rip + x], rax adrp x8, x add x8, x8, :lo12:x mov w9, #42.</description>
    </item>
    <item>
      <title>파일시스템의 종류 - 로컬, 네트워크, 분산</title>
      <link>https://www.pusnow.com/note/distributed-file-system/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/distributed-file-system/</guid>
      <description>Ceph dissertation (Ceph: Reliable, Scalable, and High-performance Distributed Storage, 2007)의 Related Work 부분을 요약 정리하였다. 당시에는 SSD가 대중화되어있지 않아서, 이 dissertation에서 다루는 디스크는 대부분 하드 디스크이다.&#xA;파일시스템의 분류 파일시스템은 크게 세 가지로 분류된다.&#xA;로컬 파일시스템: 로컬에 장착된 디스크와 상호 작용 네트워크 파일시스템 (클라이언트-서버 파일시스템): 원격 서버와 상호 작용 분산 파일시스템: 파일시스템의 데이터가 여러 호스트로 분산 로컬 파일시스템 수십 년간 파일시스템은 Unix 파일시스템과 BSD 유닉스의 Fast 파일시스템 (Fast File System, FFS)에 크게 영향을 받아왔다.</description>
    </item>
    <item>
      <title>Size of Standard Types</title>
      <link>https://www.pusnow.com/note/size-of-standard-types/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/size-of-standard-types/</guid>
      <description>Table Types x86_64 (Linux) x86_64 (Windows) x86_64 (macOS) i386 (Linux) i386 (Windows) aarch64 (Linux) aarch64 (macOS) riscv64 (Linux) short 2 2 2 2 2 2 2 2 int 4 4 4 4 4 4 4 4 long 8 4 8 4 4 8 8 8 long long 8 8 8 8 8 8 8 8 float 4 4 4 4 4 4 4 4 double 8 8 8 8 8 8 8 8 long double 16 8 16 12 8 16 8 16 void* 8 8 8 4 4 8 8 8 size_t 8 8 8 4 4 8 8 8 Compilers Windows: Visual Studio 2019 macOS: Apple Clang 12/13 Linux: GCC 8 Source Code #include &amp;lt;stdio.</description>
    </item>
    <item>
      <title>Accelerating disaggregated data centers using unikernel</title>
      <link>https://www.pusnow.com/publication/dilos-sigcommposter20/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/dilos-sigcommposter20/</guid>
      <description>Proceedings of the ACM SIGCOMM 2020 Conference Posters and Demos (SIGCOMM &amp;lsquo;20 Posters and Demos)&#xA;© Wonsup Yoon, Jinyoung Oh, Sue Moon, and Youngjin Kwon 2020. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the ACM SIGCOMM 2020 Conference Posters and Demos (SIGCOMM &amp;lsquo;20 Posters and Demos), https://dl.acm.org/doi/pdf/10.1145/3405837.3411397.&#xA;Download PDF</description>
    </item>
    <item>
      <title>Enveloping Implicit Assumptions of Intrusive Data Structures within Ownership Type System</title>
      <link>https://www.pusnow.com/publication/rust-intrusive-plos19/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/publication/rust-intrusive-plos19/</guid>
      <description>Proceedings of the 10th Workshop on Programming Languages and Operating Systems (PLOS@SOSP)&#xA;© ACM 2019. This is the author&amp;rsquo;s version of the work. It is posted here for your personal use. Not for redistribution. The definitive Version of Record was published in Proceedings of the 10th Workshop on Programming Languages and Operating Systems (PLOS@SOSP), https://dl.acm.org/doi/pdf/10.1145/3365137.3365403.&#xA;Download PDF</description>
    </item>
    <item>
      <title>한글과 유니코드</title>
      <link>https://www.pusnow.com/note/hangul-and-unicode/</link>
      <pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/note/hangul-and-unicode/</guid>
      <description>유니코드에서 한글을 어떻게 다루는지를 정리하였다.&#xA;유니코드 유니코드(Unicode)는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준 1 단순히 문자마다 번호를 붙임 계속 업데이트되며 현재는 Unicode Version 14.0.0 이 최신 UTF 유니코드를 실제 파일 등에 어떻게 기록할 것인지를 표준화한 것이다. 유니코드는 문자를 각 숫자에 대응시킨 것에 불과하고 이를 실제 비트로 표현하는 방식은 다양하다 UTF-8, UTF-16 등이 있다. 유니코드 속의 한글 Unicode Consortium의 Version 9.0.0 데이터베이스에 따르면 유니코드에서 한글이 지정된 블록은 다음과 같다.</description>
    </item>
    <item>
      <title></title>
      <link>https://www.pusnow.com/about-ko/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/about-ko/</guid>
      <description>윤원섭 (Yoon, Wonsup) [English version]&#xA;연구관심사 가상화: 유니커널, 마이크로 VM, 컨테이너, etc. 네트워킹: RDMA, virtio, etc. 데이터센터: 리소스 디스어그리게이션, 마이크로초-규모 시스템, etc. 교육과정 전산학부 박사과정, KAIST, 2019.9-현재. 공동지도교수: 문수복, 권영진 GPA: 4.01/4.30 전산학부 석사, KAIST, 2017.9-2019.8. 공동지도교수: 문수복 and 권영진 GPA: 3.95/4.30 전기전자공학부 학사, 연세대학교, 2013.3-2017.2. 부전공: 컴퓨터과학 우등졸업 (상위 3%) GPA: 4.01/4.30 선린인터넷고등학교, 2009.3-2012.2. 전공: 정보통신 학교장상 졸업 논문 Poster: Designing a Memory Disaggregation System for Cloud. [Link] Wonsup Yoon, Jisu Ok, Sue Moon, and Youngjin Kwon Proceedings of the ACM SIGCOMM 2023 Conference Posters and Demos (SIGCOMM &amp;lsquo;23 Posters and Demos).</description>
    </item>
    <item>
      <title></title>
      <link>https://www.pusnow.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/about/</guid>
      <description>Wonsup Yoon (윤원섭) [Korean version (한국어버전)]&#xA;Research Interests Virtualization: unikernels, microVM, containers, etc. Networking: RDMA, virtio, etc. Datacenter: resource disaggregation, micrsecond-scale systems, etc. Education Ph.D. Student in Computer Science, KAIST, 2019.9-present. Co-advisors: Sue Moon and Youngjin Kwon GPA: 4.01/4.30 M.S. in Computer Science, KAIST, 2017.9-2019.8. Co-advisors: Sue Moon and Youngjin Kwon GPA: 3.95/4.30 B.S. in Electrical and Electronic Engineering, Yonsei University, 2013.3-2017.2. Minor: Computer Science Graduation with High Honors (Top 3%) GPA: 4.</description>
    </item>
    <item>
      <title>Hiking Log</title>
      <link>https://www.pusnow.com/hiking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/hiking/</guid>
      <description></description>
    </item>
    <item>
      <title>Readling Log</title>
      <link>https://www.pusnow.com/reading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.pusnow.com/reading/</guid>
      <description></description>
    </item>
  </channel>
</rss>
